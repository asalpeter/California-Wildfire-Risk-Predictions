name: 🔁 Rebuild Daily Wildfire Predictions

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"     # daily at 10:00 UTC (~3am PT)

permissions:
  contents: write

concurrency:
  group: rebuild
  cancel-in-progress: false

jobs:
  rebuild:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    env:
      PYTHONUNBUFFERED: "1"  # stream Python prints immediately

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Cache big data folders (GridMET, DEM, FIRMS, feature parts)
        uses: actions/cache@v4
        with:
          path: |
            data/raw/gridmet
            data/raw/dem/tiles
            data/raw/firms
            data/processed/features_parts
            src/features/grid_index_map.parquet
          key: data-cache-${{ runner.os }}-${{ hashFiles('src/config.yaml') }}
          restore-keys: |
            data-cache-${{ runner.os }}-

      - name: Create venv & install pipeline deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -V
          pip install --upgrade pip wheel
          pip install -r requirements-pipeline.txt

      - name: Ensure required secrets
        env:
          FIRMS_MAP_KEY: ${{ secrets.FIRMS_MAP_KEY }}
        run: |
          if [ -z "$FIRMS_MAP_KEY" ]; then
            echo "FIRMS_MAP_KEY is missing in repo secrets (Settings → Secrets and variables → Actions)." >&2
            exit 1
          fi

      - name: Compute dynamic dates (END=today UTC, START=END-4y)
        run: |
          END=$(date -u +%F)
          START=$(date -u -d "$END -4 years" +%F)
          echo "END=$END"     >> $GITHUB_ENV
          echo "START=$START" >> $GITHUB_ENV

      # ---------- REFRESH RAW DATA (idempotent; skips existing) ----------
      - name: Download latest FIRMS detections
        env:
          FIRMS_MAP_KEY: ${{ secrets.FIRMS_MAP_KEY }}
        run: |
          source .venv/bin/activate
          python -u src/data/download_firms.py

      - name: Download/ensure GridMET year files (END=today)
        env:
          END: ${{ steps.dates.outputs.END_DATE }}
        run: |
          source .venv/bin/activate
          python -u src/data/download_gridmet.py

      # ---------- BUILD LABELS & FEATURES ----------
      - name: Build labels (hex × day)
        run: |
          source .venv/bin/activate
          python -u src/data/make_labels.py

      - name: Build features (weather + VPD + statics + lags)
        run: |
          source .venv/bin/activate
          python -u src/data/make_features.py

      # ---------- TRAIN & PREDICT ----------
      - name: Train model
        run: |
          source .venv/bin/activate
          python -u src/data/train.py

      - name: Predict & export GeoJSON
        run: |
          source .venv/bin/activate
          python -u src/data/predict.py

      # ---------- COMMIT ONLY SMALL ARTIFACTS ----------
      - name: Commit and push updated artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/features/risk_predictions.geojson src/features/metadata.json src/models/model.pkl
          git commit -m "🔄 Auto-update: model retrain & predictions ($(date -u +'%Y-%m-%d'))" || echo "No changes to commit"
          git push
